RENDER={FLAT:0,PERSPECTIVE:1},CanvasRenderingContext2D.prototype.loadConfig=function(t){for(var i in t)t.hasOwnProperty(i)&&i in this&&(this[i]=t[i])},CanvasRenderingContext2D.prototype.moveToPoint=function(t){this.moveTo(t.x,t.y)},CanvasRenderingContext2D.prototype.lineToPoint=function(t){this.lineTo(t.x,t.y)};var cos=Math.cos,sin=Math.sin;function Canvas3d(t,i){this.ctx=t,this.scene=i,this.config=i.config.canvas,this.cleanCanvas=function(){this.ctx.clearRect(0,0,this.config.width,this.config.height)},this.scale=function(){},this.fillPolygon=function(t){},this.strokePolygon=function(i,n){this.ctx.beginPath(),this.ctx.loadConfig(n||{});var o=i.vertexs;this.ctx.moveToPoint(this.project(o[0]));for(var s=1;s<o.length;s++)t.lineToPoint(this.project(o[s]));this.ctx.lineToPoint(this.project(o[0])),this.ctx.stroke()},this.strokeLine=function(i,n){this.ctx.beginPath(),this.ctx.loadConfig(n||{}),this.ctx.moveToPoint(this.project(i[0]));for(var o=1;o<i.length;o++)t.lineToPoint(this.project(i[o]));this.ctx.stroke()},this.project=function(t){return this.scene.config.render==RENDER.PERSPECTIVE?this.scene.transform(this.scene.project(t)):this.scene.transform(t)}}function Scene(t){this.viewer=t.viewer,this.config=t,this.project=function(t){return{x:t.x/(1+t.z*this.config.scale/this.viewer.z),y:t.y/(1+t.z*this.config.scale/this.viewer.z),z:0}},this.transform=function(t){return{x:t.x*this.config.scale+.5*this.config.canvas.width,y:-t.y*this.config.scale+.5*this.config.canvas.height,z:t.z*this.config.scale}},this.scale=function(t){return t.multiply(this.config.scale)}}