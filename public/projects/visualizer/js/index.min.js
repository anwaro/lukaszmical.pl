RENDER={FLAT:0,PERSPECTIVE:1},CanvasRenderingContext2D.prototype.loadConfig=function(t){for(var e in t)t.hasOwnProperty(e)&&e in this&&(this[e]=t[e])},CanvasRenderingContext2D.prototype.moveToPoint=function(t){this.moveTo(t.x,t.y)},CanvasRenderingContext2D.prototype.lineToPoint=function(t){this.lineTo(t.x,t.y)};var cos=Math.cos,sin=Math.sin;function Canvas3d(s,t){this.ctx=s,this.scene=t,this.config=t.config.canvas,this.cleanCanvas=function(){this.ctx.clearRect(0,0,this.config.width,this.config.height)},this.scale=function(){},this.fillPolygon=function(t){},this.strokePolygon=function(t,e){this.ctx.beginPath(),this.ctx.loadConfig(e||{});var i=t.vertexs;this.ctx.moveToPoint(this.project(i[0]));for(var n=1;n<i.length;n++)s.lineToPoint(this.project(i[n]));this.ctx.lineToPoint(this.project(i[0])),this.ctx.stroke()},this.strokeLine=function(t,e){this.ctx.beginPath(),this.ctx.loadConfig(e||{}),this.ctx.moveToPoint(this.project(t[0]));for(var i=1;i<t.length;i++)s.lineToPoint(this.project(t[i]));this.ctx.stroke()},this.project=function(t){return this.scene.config.render==RENDER.PERSPECTIVE?this.scene.transform(this.scene.project(t)):this.scene.transform(t)}}function Scene(t){this.viewer=t.viewer,this.config=t,this.project=function(t){return{x:t.x/(1+t.z*this.config.scale/this.viewer.z),y:t.y/(1+t.z*this.config.scale/this.viewer.z),z:0}},this.transform=function(t){return{x:t.x*this.config.scale+.5*this.config.canvas.width,y:-t.y*this.config.scale+.5*this.config.canvas.height,z:t.z*this.config.scale}},this.scale=function(t){return t.multiply(this.config.scale)}}function Point(t,e,i){this.x="object"==typeof t?t.x:t||0,this.y="object"==typeof t?t.y:e||0,this.z="object"==typeof t?t.z:i||0,this.set=function(t,e,i){return"object"==typeof t?(this.x=t.x,this.y=t.y,this.z=t.z):(this.x=t||0,this.y=e||0,this.z=i||0),this},this.dist2d=function(t){return Math.sqrt(Math.pow(t.x-this.x,2)+Math.pow(t.y-this.y,2))},this.dist3d=function(t){return Math.sqrt(Math.pow(t.x-this.x,2)+Math.pow(t.y-this.y,2)+Math.pow(t.z-this.z,2))}}function Vertex(t,e,i){Point.call(this,t,e,i),this.current=new Point(t,e,i),this.angle2D=function(){var t=Math.atan2(this.y,this.x);return 0<t?t:2*PI+t},this.rotate=function(t){return this.set(t.dotProduct(this.current)),this},this.len=function(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2)+Math.pow(this.z,2))},this.norm=function(){return this.multiply(1/this.len())},this.normThis=function(){return this.multiplyThis(1/this.len()),this},this.dotProduct=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},this.crossProduct=function(t){return new Vertex(this.y*t.z-t.y*this.z,this.z*t.x-t.z*this.x,this.x*t.y-t.x*this.y)},this.update=function(){return this.set(this.current),this},this.toVertex=function(t){return new Vertex(t.x-this.x,t.y-this.y,t.z-this.z)},this.add=function(t){return new Vertex(t.x+this.x,t.y+this.y,t.z+this.z)},this.addThis=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this},this.subtract=function(t){return new Vertex(this.x-t.x,this.y-t.y,this.z-t.z)},this.subtractThis=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},this.multiply=function(t){return new Vertex(t*this.x,t*this.y,t*this.z)},this.multiplyThis=function(t){return this.x*=t,this.y*=t,this.z*=t,this},this.str=function(){return"Vertex{x: "+this.x+", y: "+this.y+", z: "+this.z+" }"}}function Matrix(t,e,i){this.v1=t,this.v2=e,this.v3=i,this.result=new Point,this.dotProduct=function(t){return this.result.x=this.v1.x*t.x+this.v1.y*t.y+this.v1.z*t.z,this.result.y=this.v2.x*t.x+this.v2.y*t.y+this.v2.z*t.z,this.result.z=this.v3.x*t.x+this.v3.y*t.y+this.v3.z*t.z,this.result},this.updateMatrix=function(t,e){var i=cos(e),e=sin(e),n=1-i,s=t.x,o=t.y,t=t.z;this.v1.set(n*s*s+i,n*s*o-t*e,n*s*t+o*e),this.v2.set(n*s*o+t*e,n*o*o+i,n*o*t-s*e),this.v3.set(n*s*t-o*e,n*o*t+s*e,n*t*t+i)}}function Polygon(t){this.vertexs=t,this.len=t.length,this.angle=0,this.show=!0,this.normal=new Vertex,this.calcNormal=function(){return this.normal.set(this.get(2).toVertex(this.get(1)).crossProduct(this.get(2).toVertex(this.get(3)))),this},this.average=function(){return this.vertexs.reduce(function(t,e){return t.add(e)}).multiply(1/this.len)},this.rotate=function(e){return this.vertexs.forEach(function(t){t.rotate(e)}),this.calcNormal(),this},this.update=function(){return this.vertexs.forEach(function(t){t.update()}),this},this.get=function(t){return this.vertexs[t]},this.isShow=function(){return 0<this.normal.z}}Vertex.prototype=Object.create(Point.prototype),Vertex.prototype.constructor=Vertex,canvasSetting={width:900,height:500},sceneConfig={viewer:new Point(0,0,300),canvas:canvasSetting,scale:100,render:RENDER.PERSPECTIVE},pol1Congig={lineWidth:4,strokeStyle:"blue",lineJoin:"round"},pol2Congig={lineWidth:4,strokeStyle:"red",lineJoin:"round"},axisSetting={lineWidth:1,strokeStyle:"green",lineJoin:"round"};var canvas3d,canvas,angle=5,rotateAxis=new Vertex(3,1,4),rotateMatrix=(rotateAxis.normThis(),new Matrix(new Vertex,new Vertex,new Vertex)),pol1=new Polygon([new Vertex(-1,1,1),new Vertex(-1,-1,1),new Vertex(-1,-1,-1),new Vertex(-1,1,-1),new Vertex(-1,1,1),new Vertex(1,1,1),new Vertex(1,1,-1),new Vertex(-1,1,-1)]),pol2=new Polygon([new Vertex(1,-1,-1),new Vertex(1,1,-1),new Vertex(1,1,1),new Vertex(1,-1,1),new Vertex(1,-1,-1),new Vertex(-1,-1,-1),new Vertex(-1,-1,1),new Vertex(1,-1,1)]),mouse=new Point(0,0,0),mouseLazy=new Point(1,2,0),scene=new Scene(sceneConfig);function mouseMove(t){var e=canvas.getBoundingClientRect();mouse.set(t.clientX-e.left,t.clientY-e.top)}function init(t){(canvas=document.getElementById(t)).addEventListener("mousemove",mouseMove),canvas.width=canvasSetting.width,canvas.height=canvasSetting.height;t=canvas.getContext("2d");canvas3d=new Canvas3d(t,scene),setInterval(function(){rotate()},50)}function rotate(){canvas3d.cleanCanvas(),mouseLazy.x+=.3*(mouse.x-mouseLazy.x),mouseLazy.y+=.3*(mouse.y-mouseLazy.y),rotateAxis.set(mouseLazy.x-canvasSetting.width/2,canvasSetting.height/2-mouseLazy.y),canvas3d.strokeLine([rotateAxis.multiply(0),rotateAxis.multiply(1/sceneConfig.scale)],axisSetting),rotateAxis.normThis(),rotateMatrix.updateMatrix(rotateAxis,angle),pol1.rotate(rotateMatrix),canvas3d.strokePolygon(pol1,pol1Congig),pol2.rotate(rotateMatrix),canvas3d.strokePolygon(pol2,pol2Congig)}init("visualizer");