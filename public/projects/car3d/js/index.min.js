THREE.OBJLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.materials=null},THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(e,n,t,i){var o=this,a=new THREE.XHRLoader(o.manager);a.setPath(this.path),a.load(e,function(e){n(o.parse(e))},t,i)},setPath:function(e){this.path=e},setMaterials:function(e){this.materials=e},parse:function(e){console.time("OBJLoader");var n=[],t=!1,i=[],o=[],a=[];function r(e){B={name:e,geometry:{vertices:[],normals:[],uvs:[]},material:{name:"",smooth:!0}},n.push(B)}function w(e){e=parseInt(e);return 3*(0<=e?e-1:e+i.length/3)}function E(e){e=parseInt(e);return 3*(0<=e?e-1:e+o.length/3)}function f(e){e=parseInt(e);return 2*(0<=e?e-1:e+a.length/2)}function h(e,n,t){B.geometry.vertices.push(i[e],i[e+1],i[e+2],i[n],i[n+1],i[n+2],i[t],i[t+1],i[t+2])}function p(e,n,t){B.geometry.normals.push(o[e],o[e+1],o[e+2],o[n],o[n+1],o[n+2],o[t],o[t+1],o[t+2])}function g(e,n,t){B.geometry.uvs.push(a[e],a[e+1],a[n],a[n+1],a[t],a[t+1])}function d(e,n,t,i,o,a,r,d,s,l,c,u){var m,e=w(e),n=w(n),t=w(t);void 0===i?h(e,n,t):(h(e,n,m=w(i)),h(n,t,m)),void 0!==o&&(e=f(o),n=f(a),t=f(r),void 0===i?g(e,n,t):(g(e,n,m=f(d)),g(n,t,m))),void 0!==s&&(e=E(s),n=E(l),t=E(c),void 0===i?p(e,n,t):(p(e,n,m=E(u)),p(n,t,m)))}r("");for(var s=/^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,l=/^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,c=/^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,u=/^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,m=/^f\s+((-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+))(?:\s+((-?\d+)\/(-?\d+)))?/,v=/^f\s+((-?\d+)\/(-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+)\/(-?\d+))\s+((-?\d+)\/(-?\d+)\/(-?\d+))(?:\s+((-?\d+)\/(-?\d+)\/(-?\d+)))?/,H=/^f\s+((-?\d+)\/\/(-?\d+))\s+((-?\d+)\/\/(-?\d+))\s+((-?\d+)\/\/(-?\d+))(?:\s+((-?\d+)\/\/(-?\d+)))?/,R=/^[og]\s+(.+)/,T=/^s\s+([01]|on|off)/,x=e.split("\n"),L=0;L<x.length;L++){var y,b=(b=x[L]).trim();if(0!==b.length&&"#"!==b.charAt(0))if(null!==(y=s.exec(b)))i.push(parseFloat(y[1]),parseFloat(y[2]),parseFloat(y[3]));else if(null!==(y=l.exec(b)))o.push(parseFloat(y[1]),parseFloat(y[2]),parseFloat(y[3]));else if(null!==(y=c.exec(b)))a.push(parseFloat(y[1]),parseFloat(y[2]));else if(null!==(y=u.exec(b)))d(y[1],y[2],y[3],y[4]);else if(null!==(y=m.exec(b)))d(y[2],y[5],y[8],y[11],y[3],y[6],y[9],y[12]);else if(null!==(y=v.exec(b)))d(y[2],y[6],y[10],y[14],y[3],y[7],y[11],y[15],y[4],y[8],y[12],y[16]);else if(null!==(y=H.exec(b)))d(y[2],y[5],y[8],y[11],void 0,void 0,void 0,void 0,y[3],y[6],y[9],y[12]);else if(null!==(y=R.exec(b))){var A=y[1].trim();!1===t?(t=!0,B.name=A):r(A)}else if(/^usemtl /.test(b))B.material.name=b.substring(7).trim();else if(!/^mtllib /.test(b)){if(null===(y=T.exec(b)))throw new Error("Unexpected line: "+b);B.material.smooth="1"===y[1]||"on"===y[1]}}for(var F=new THREE.Group,L=0,M=n.length;L<M;L++){var B,W,P=(B=n[L]).geometry,S=new THREE.BufferGeometry,P=(S.addAttribute("position",new THREE.BufferAttribute(new Float32Array(P.vertices),3)),0<P.normals.length?S.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(P.normals),3)):S.computeVertexNormals(),0<P.uvs.length&&S.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(P.uvs),2)),(W=null!==this.materials?this.materials.create(B.material.name):W)||((W=new THREE.MeshPhongMaterial).name=B.material.name),W.shading=B.material.smooth?THREE.SmoothShading:THREE.FlatShading,new THREE.Mesh(S,W));P.name=B.name,F.add(P)}return console.timeEnd("OBJLoader"),F}};let container,camera,scene,renderer,mouseX=0,mouseY=0,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2;function init(){container=document.createElement("div"),document.body.appendChild(container),(camera=new THREE.PerspectiveCamera(12,window.innerWidth/window.innerHeight,1,2e3)).position.z=30,scene=new THREE.Scene;var e=new THREE.AmbientLight(1052720),e=(scene.add(e),new THREE.DirectionalLight(16772829)),e=(e.position.set(0,0,1),scene.add(e),new THREE.LoadingManager);e.onProgress=function(e,n,t){console.log(e,n,t)};let n=new THREE.Texture;new THREE.ImageLoader(e).load("/projects/car3d/image/UV_Grid_Sm.jpg",function(e){n.image=e,n.needsUpdate=!0}),new THREE.OBJLoader(e).load("/projects/car3d/image/gtr_1.obj",function(e){e.traverse(function(e){e instanceof THREE.Mesh&&(e.material.map=n)}),e.position.y=0,e.position.x=20,scene.add(e)},function(e){e.lengthComputable&&console.log(Math.round(e.loaded/e.total*100,2)+"% downloaded")},function(e){}),(renderer=new THREE.WebGLRenderer).setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight-100),container.appendChild(renderer.domElement),document.addEventListener("mousemove",onDocumentMouseMove,!1),window.addEventListener("resize",onWindowResize,!1)}function onWindowResize(){windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function onDocumentMouseMove(e){mouseX=(e.clientX-windowHalfX)/2,mouseY=(e.clientY-windowHalfY)/2}function animate(){requestAnimationFrame(animate),render()}function render(){camera.position.x=0,camera.position.y=0,scene.rotation.y+=.002,camera.lookAt(scene.position),renderer.render(scene,camera)}init(),animate();